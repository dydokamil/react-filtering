// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Startup Table renders startup table component 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <StartupTable
    fetchStartups={[Function]}
    startups={
        Object {
            "all": Array [
              Object {
                "SNo": 1,
              },
              Object {
                "SNo": 2,
              },
              Object {
                "SNo": 3,
              },
            ],
            "filtered": Array [
              Object {
                "SNo": 1,
              },
              Object {
                "SNo": 2,
              },
              Object {
                "SNo": 3,
              },
            ],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": StartupTable {
      "_reactInternalFiber": FiberNode {
        "_debugID": 4,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "fetchStartups": [Function],
              "startups": Object {
                "all": Array [
                  Object {
                    "SNo": 1,
                  },
                  Object {
                    "SNo": 2,
                  },
                  Object {
                    "SNo": 3,
                  },
                ],
                "filtered": Array [
                  Object {
                    "SNo": 1,
                  },
                  Object {
                    "SNo": 2,
                  },
                  Object {
                    "SNo": 3,
                  },
                ],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "fetchStartups": [Function],
              "startups": Object {
                "all": Array [
                  Object {
                    "SNo": 1,
                  },
                  Object {
                    "SNo": 2,
                  },
                  Object {
                    "SNo": 3,
                  },
                ],
                "filtered": Array [
                  Object {
                    "SNo": 1,
                  },
                  Object {
                    "SNo": 2,
                  },
                  Object {
                    "SNo": 3,
                  },
                ],
              },
            },
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      class="table=responsive"
                                    >
                                                      <table
                                                                        id="startup-table"
                                                                        class="table"
                                                      >
                                                                        <thead>
                                                                                          <tr>
                                                                                                            <th>
                                                                                                                              Id
                                                                                                            </th>
                                                                                                            <th>
                                                                                                                              Startup Name
                                                                                                            </th>
                                                                                                            <th>
                                                                                                                              Location
                                                                                                            </th>
                                                                                          </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              1
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              2
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              3
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                        </tbody>
                                                      </table>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "fetchStartups": [Function],
                                                                  "startups": Object {
                                                                    "all": Array [
                                                                      Object {
                                                                        "SNo": 1,
                                                                      },
                                                                      Object {
                                                                        "SNo": 2,
                                                                      },
                                                                      Object {
                                                                        "SNo": 3,
                                                                      },
                                                                    ],
                                                                    "filtered": Array [
                                                                      Object {
                                                                        "SNo": 1,
                                                                      },
                                                                      Object {
                                                                        "SNo": 2,
                                                                      },
                                                                      Object {
                                                                        "SNo": 3,
                                                                      },
                                                                    ],
                                                                  },
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "fetchStartups": [Function],
                                                                  "startups": Object {
                                                                    "all": Array [
                                                                      Object {
                                                                        "SNo": 1,
                                                                      },
                                                                      Object {
                                                                        "SNo": 2,
                                                                      },
                                                                      Object {
                                                                        "SNo": 3,
                                                                      },
                                                                    ],
                                                                    "filtered": Array [
                                                                      Object {
                                                                        "SNo": 1,
                                                                      },
                                                                      Object {
                                                                        "SNo": 2,
                                                                      },
                                                                      Object {
                                                                        "SNo": 3,
                                                                      },
                                                                    ],
                                                                  },
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "fetchStartups": [Function],
                                                "startups": Object {
                                                  "all": Array [
                                                    Object {
                                                      "SNo": 1,
                                                    },
                                                    Object {
                                                      "SNo": 2,
                                                    },
                                                    Object {
                                                      "SNo": 3,
                                                    },
                                                  ],
                                                  "filtered": Array [
                                                    Object {
                                                      "SNo": 1,
                                                    },
                                                    Object {
                                                      "SNo": 2,
                                                    },
                                                    Object {
                                                      "SNo": 3,
                                                    },
                                                  ],
                                                },
                                              }
                }
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                                <div
                                                class="table=responsive"
                                >
                                                <table
                                                                id="startup-table"
                                                                class="table"
                                                >
                                                                <thead>
                                                                                <tr>
                                                                                                <th>
                                                                                                                Id
                                                                                                </th>
                                                                                                <th>
                                                                                                                Startup Name
                                                                                                </th>
                                                                                                <th>
                                                                                                                Location
                                                                                                </th>
                                                                                </tr>
                                                                </thead>
                                                                <tbody>
                                                                                <tr>
                                                                                                <td>
                                                                                                                1
                                                                                                </td>
                                                                                                <td />
                                                                                                <td />
                                                                                </tr>
                                                                                <tr>
                                                                                                <td>
                                                                                                                2
                                                                                                </td>
                                                                                                <td />
                                                                                                <td />
                                                                                </tr>
                                                                                <tr>
                                                                                                <td>
                                                                                                                3
                                                                                                </td>
                                                                                                <td />
                                                                                                <td />
                                                                                </tr>
                                                                </tbody>
                                                </table>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "fetchStartups": [Function],
                "startups": Object {
                  "all": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                  "filtered": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "fetchStartups": [Function],
                "startups": Object {
                  "all": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                  "filtered": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
            "lineNumber": 14,
          },
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
              "lineNumber": 15,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                "lineNumber": 16,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                  "lineNumber": 17,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                    "lineNumber": 18,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                      "lineNumber": 19,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Id",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                        "lineNumber": 20,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Startup Name",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                          "lineNumber": 21,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Location",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <th>
                          Location
</th>,
                        "tag": 5,
                        "type": "th",
                        "updateQueue": null,
                      },
                      "stateNode": <th>
                        Startup Name
</th>,
                      "tag": 5,
                      "type": "th",
                      "updateQueue": null,
                    },
                    "stateNode": <th>
                      Id
</th>,
                    "tag": 5,
                    "type": "th",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <th>
                        Id
</th>,
                      <th>
                        Startup Name
</th>,
                      <th>
                        Location
</th>,
                    ],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <tr>
                    <th>
                                        Id
                    </th>
                    <th>
                                        Startup Name
                    </th>
                    <th>
                                        Location
                    </th>
</tr>,
                  "tag": 5,
                  "type": "tr",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <tr>
                    <th>
                                        Id
                    </th>
                    <th>
                                        Startup Name
                    </th>
                    <th>
                                        Location
                    </th>
</tr>,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                    "lineNumber": 24,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 14,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                      "lineNumber": 28,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                        "lineNumber": 29,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": 1,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 18,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                          "lineNumber": 30,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": undefined,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 19,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                            "lineNumber": 31,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 2,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": undefined,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <td />,
                          "tag": 5,
                          "type": "td",
                          "updateQueue": null,
                        },
                        "stateNode": <td />,
                        "tag": 5,
                        "type": "td",
                        "updateQueue": null,
                      },
                      "stateNode": <td>
                        1
</td>,
                      "tag": 5,
                      "type": "td",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": "1",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <td>
                          1
</td>,
                        <td />,
                        <td />,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 15,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                        "lineNumber": 28,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                          "lineNumber": 29,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": 2,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                            "lineNumber": 30,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": undefined,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 22,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                              "lineNumber": 31,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": undefined,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <td />,
                            "tag": 5,
                            "type": "td",
                            "updateQueue": null,
                          },
                          "stateNode": <td />,
                          "tag": 5,
                          "type": "td",
                          "updateQueue": null,
                        },
                        "stateNode": <td>
                          2
</td>,
                        "tag": 5,
                        "type": "td",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": "2",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <td>
                            2
</td>,
                          <td />,
                          <td />,
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 16,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                          "lineNumber": 28,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 23,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                            "lineNumber": 29,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": 3,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 24,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                              "lineNumber": 30,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": undefined,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 25,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                                "lineNumber": 31,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": undefined,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <td />,
                              "tag": 5,
                              "type": "td",
                              "updateQueue": null,
                            },
                            "stateNode": <td />,
                            "tag": 5,
                            "type": "td",
                            "updateQueue": null,
                          },
                          "stateNode": <td>
                            3
</td>,
                          "tag": 5,
                          "type": "td",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "internalContextTag": 0,
                        "key": "3",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <td>
                              3
</td>,
                            <td />,
                            <td />,
                          ],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <tr>
                          <td>
                                                    3
                          </td>
                          <td />
                          <td />
</tr>,
                        "tag": 5,
                        "type": "tr",
                        "updateQueue": null,
                      },
                      "stateNode": <tr>
                        <td>
                                                2
                        </td>
                        <td />
                        <td />
</tr>,
                      "tag": 5,
                      "type": "tr",
                      "updateQueue": null,
                    },
                    "stateNode": <tr>
                      <td>
                                            1
                      </td>
                      <td />
                      <td />
</tr>,
                    "tag": 5,
                    "type": "tr",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <tr>
                        <td>
                                                1
                        </td>
                        <td />
                        <td />
</tr>,
                      <tr>
                        <td>
                                                2
                        </td>
                        <td />
                        <td />
</tr>,
                      <tr>
                        <td>
                                                3
                        </td>
                        <td />
                        <td />
</tr>,
                    ],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <tbody>
                    <tr>
                                        <td>
                                                            1
                                        </td>
                                        <td />
                                        <td />
                    </tr>
                    <tr>
                                        <td>
                                                            2
                                        </td>
                                        <td />
                                        <td />
                    </tr>
                    <tr>
                                        <td>
                                                            3
                                        </td>
                                        <td />
                                        <td />
                    </tr>
</tbody>,
                  "tag": 5,
                  "type": "tbody",
                  "updateQueue": null,
                },
                "stateNode": <thead>
                  <tr>
                                    <th>
                                                      Id
                                    </th>
                                    <th>
                                                      Startup Name
                                    </th>
                                    <th>
                                                      Location
                                    </th>
                  </tr>
</thead>,
                "tag": 5,
                "type": "thead",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <thead>
                    <tr>
                                        <th>
                                                            Id
                                        </th>
                                        <th>
                                                            Startup Name
                                        </th>
                                        <th>
                                                            Location
                                        </th>
                    </tr>
</thead>,
                  <tbody>
                    <tr>
                                        <td>
                                                            1
                                        </td>
                                        <td />
                                        <td />
                    </tr>
                    <tr>
                                        <td>
                                                            2
                                        </td>
                                        <td />
                                        <td />
                    </tr>
                    <tr>
                                        <td>
                                                            3
                                        </td>
                                        <td />
                                        <td />
                    </tr>
</tbody>,
                ],
                "className": "table",
                "id": "startup-table",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <table
                id="startup-table"
                class="table"
>
                <thead>
                                <tr>
                                                <th>
                                                                Id
                                                </th>
                                                <th>
                                                                Startup Name
                                                </th>
                                                <th>
                                                                Location
                                                </th>
                                </tr>
                </thead>
                <tbody>
                                <tr>
                                                <td>
                                                                1
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                                <tr>
                                                <td>
                                                                2
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                                <tr>
                                                <td>
                                                                3
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                </tbody>
</table>,
              "tag": 5,
              "type": "table",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <table
                className="table"
                id="startup-table"
>
                <thead>
                                <tr>
                                                <th>
                                                                Id
                                                </th>
                                                <th>
                                                                Startup Name
                                                </th>
                                                <th>
                                                                Location
                                                </th>
                                </tr>
                </thead>
                <tbody>
                                <tr>
                                                <td>
                                                                1
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                                <tr>
                                                <td>
                                                                2
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                                <tr>
                                                <td>
                                                                3
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                </tbody>
</table>,
              "className": "table=responsive",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="table=responsive"
>
              <table
                            id="startup-table"
                            class="table"
              >
                            <thead>
                                          <tr>
                                                        <th>
                                                                      Id
                                                        </th>
                                                        <th>
                                                                      Startup Name
                                                        </th>
                                                        <th>
                                                                      Location
                                                        </th>
                                          </tr>
                            </thead>
                            <tbody>
                                          <tr>
                                                        <td>
                                                                      1
                                                        </td>
                                                        <td />
                                                        <td />
                                          </tr>
                                          <tr>
                                                        <td>
                                                                      2
                                                        </td>
                                                        <td />
                                                        <td />
                                          </tr>
                                          <tr>
                                                        <td>
                                                                      3
                                                        </td>
                                                        <td />
                                                        <td />
                                          </tr>
                            </tbody>
              </table>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <div
              className="table=responsive"
>
              <table
                            className="table"
                            id="startup-table"
              >
                            <thead>
                                          <tr>
                                                        <th>
                                                                      Id
                                                        </th>
                                                        <th>
                                                                      Startup Name
                                                        </th>
                                                        <th>
                                                                      Location
                                                        </th>
                                          </tr>
                            </thead>
                            <tbody>
                                          <tr>
                                                        <td>
                                                                      1
                                                        </td>
                                                        <td />
                                                        <td />
                                          </tr>
                                          <tr>
                                                        <td>
                                                                      2
                                                        </td>
                                                        <td />
                                                        <td />
                                          </tr>
                                          <tr>
                                                        <td>
                                                                      3
                                                        </td>
                                                        <td />
                                                        <td />
                                          </tr>
                            </tbody>
              </table>
</div>,
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <div>
            <div
                        class="table=responsive"
            >
                        <table
                                    id="startup-table"
                                    class="table"
                        >
                                    <thead>
                                                <tr>
                                                            <th>
                                                                        Id
                                                            </th>
                                                            <th>
                                                                        Startup Name
                                                            </th>
                                                            <th>
                                                                        Location
                                                            </th>
                                                </tr>
                                    </thead>
                                    <tbody>
                                                <tr>
                                                            <td>
                                                                        1
                                                            </td>
                                                            <td />
                                                            <td />
                                                </tr>
                                                <tr>
                                                            <td>
                                                                        2
                                                            </td>
                                                            <td />
                                                            <td />
                                                </tr>
                                                <tr>
                                                            <td>
                                                                        3
                                                            </td>
                                                            <td />
                                                            <td />
                                                </tr>
                                    </tbody>
                        </table>
            </div>
</div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 5,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "internalContextTag": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "fetchStartups": [Function],
          "startups": Object {
            "all": Array [
              Object {
                "SNo": 1,
              },
              Object {
                "SNo": 2,
              },
              Object {
                "SNo": 3,
              },
            ],
            "filtered": Array [
              Object {
                "SNo": 1,
              },
              Object {
                "SNo": 2,
              },
              Object {
                "SNo": 3,
              },
            ],
          },
        },
        "memoizedState": null,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "fetchStartups": [Function],
              "startups": Object {
                "all": Array [
                  Object {
                    "SNo": 1,
                  },
                  Object {
                    "SNo": 2,
                  },
                  Object {
                    "SNo": 3,
                  },
                ],
                "filtered": Array [
                  Object {
                    "SNo": 1,
                  },
                  Object {
                    "SNo": 2,
                  },
                  Object {
                    "SNo": 3,
                  },
                ],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "fetchStartups": [Function],
              "startups": Object {
                "all": Array [
                  Object {
                    "SNo": 1,
                  },
                  Object {
                    "SNo": 2,
                  },
                  Object {
                    "SNo": 3,
                  },
                ],
                "filtered": Array [
                  Object {
                    "SNo": 1,
                  },
                  Object {
                    "SNo": 2,
                  },
                  Object {
                    "SNo": 3,
                  },
                ],
              },
            },
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      class="table=responsive"
                                    >
                                                      <table
                                                                        id="startup-table"
                                                                        class="table"
                                                      >
                                                                        <thead>
                                                                                          <tr>
                                                                                                            <th>
                                                                                                                              Id
                                                                                                            </th>
                                                                                                            <th>
                                                                                                                              Startup Name
                                                                                                            </th>
                                                                                                            <th>
                                                                                                                              Location
                                                                                                            </th>
                                                                                          </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              1
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              2
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              3
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                        </tbody>
                                                      </table>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "fetchStartups": [Function],
                                                                  "startups": Object {
                                                                    "all": Array [
                                                                      Object {
                                                                        "SNo": 1,
                                                                      },
                                                                      Object {
                                                                        "SNo": 2,
                                                                      },
                                                                      Object {
                                                                        "SNo": 3,
                                                                      },
                                                                    ],
                                                                    "filtered": Array [
                                                                      Object {
                                                                        "SNo": 1,
                                                                      },
                                                                      Object {
                                                                        "SNo": 2,
                                                                      },
                                                                      Object {
                                                                        "SNo": 3,
                                                                      },
                                                                    ],
                                                                  },
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "fetchStartups": [Function],
                                                                  "startups": Object {
                                                                    "all": Array [
                                                                      Object {
                                                                        "SNo": 1,
                                                                      },
                                                                      Object {
                                                                        "SNo": 2,
                                                                      },
                                                                      Object {
                                                                        "SNo": 3,
                                                                      },
                                                                    ],
                                                                    "filtered": Array [
                                                                      Object {
                                                                        "SNo": 1,
                                                                      },
                                                                      Object {
                                                                        "SNo": 2,
                                                                      },
                                                                      Object {
                                                                        "SNo": 3,
                                                                      },
                                                                    ],
                                                                  },
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "fetchStartups": [Function],
                                                "startups": Object {
                                                  "all": Array [
                                                    Object {
                                                      "SNo": 1,
                                                    },
                                                    Object {
                                                      "SNo": 2,
                                                    },
                                                    Object {
                                                      "SNo": 3,
                                                    },
                                                  ],
                                                  "filtered": Array [
                                                    Object {
                                                      "SNo": 1,
                                                    },
                                                    Object {
                                                      "SNo": 2,
                                                    },
                                                    Object {
                                                      "SNo": 3,
                                                    },
                                                  ],
                                                },
                                              }
                }
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                                <div
                                                class="table=responsive"
                                >
                                                <table
                                                                id="startup-table"
                                                                class="table"
                                                >
                                                                <thead>
                                                                                <tr>
                                                                                                <th>
                                                                                                                Id
                                                                                                </th>
                                                                                                <th>
                                                                                                                Startup Name
                                                                                                </th>
                                                                                                <th>
                                                                                                                Location
                                                                                                </th>
                                                                                </tr>
                                                                </thead>
                                                                <tbody>
                                                                                <tr>
                                                                                                <td>
                                                                                                                1
                                                                                                </td>
                                                                                                <td />
                                                                                                <td />
                                                                                </tr>
                                                                                <tr>
                                                                                                <td>
                                                                                                                2
                                                                                                </td>
                                                                                                <td />
                                                                                                <td />
                                                                                </tr>
                                                                                <tr>
                                                                                                <td>
                                                                                                                3
                                                                                                </td>
                                                                                                <td />
                                                                                                <td />
                                                                                </tr>
                                                                </tbody>
                                                </table>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "fetchStartups": [Function],
                "startups": Object {
                  "all": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                  "filtered": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "fetchStartups": [Function],
                "startups": Object {
                  "all": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                  "filtered": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "componentDidMount": [Function],
      "context": Object {},
      "props": Object {
        "fetchStartups": [Function],
        "startups": Object {
          "all": Array [
            Object {
              "SNo": 1,
            },
            Object {
              "SNo": 2,
            },
            Object {
              "SNo": 3,
            },
          ],
          "filtered": Array [
            Object {
              "SNo": 1,
            },
            Object {
              "SNo": 2,
            },
            Object {
              "SNo": 3,
            },
          ],
        },
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "fetchStartups": [Function],
      "startups": Object {
        "all": Array [
          Object {
            "SNo": 1,
          },
          Object {
            "SNo": 2,
          },
          Object {
            "SNo": 3,
          },
        ],
        "filtered": Array [
          Object {
            "SNo": 1,
          },
          Object {
            "SNo": 2,
          },
          Object {
            "SNo": 3,
          },
        ],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": <div>
        <div
                class="table=responsive"
        >
                <table
                        id="startup-table"
                        class="table"
                >
                        <thead>
                                <tr>
                                        <th>
                                                Id
                                        </th>
                                        <th>
                                                Startup Name
                                        </th>
                                        <th>
                                                Location
                                        </th>
                                </tr>
                        </thead>
                        <tbody>
                                <tr>
                                        <td>
                                                1
                                        </td>
                                        <td />
                                        <td />
                                </tr>
                                <tr>
                                        <td>
                                                2
                                        </td>
                                        <td />
                                        <td />
                                </tr>
                                <tr>
                                        <td>
                                                3
                                        </td>
                                        <td />
                                        <td />
                                </tr>
                        </tbody>
                </table>
        </div>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="table=responsive"
>
          <table
                    className="table"
                    id="startup-table"
          >
                    <thead>
                              <tr>
                                        <th>
                                                  Id
                                        </th>
                                        <th>
                                                  Startup Name
                                        </th>
                                        <th>
                                                  Location
                                        </th>
                              </tr>
                    </thead>
                    <tbody>
                              <tr>
                                        <td>
                                                  1
                                        </td>
                                        <td />
                                        <td />
                              </tr>
                              <tr>
                                        <td>
                                                  2
                                        </td>
                                        <td />
                                        <td />
                              </tr>
                              <tr>
                                        <td>
                                                  3
                                        </td>
                                        <td />
                                        <td />
                              </tr>
                    </tbody>
          </table>
</div>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div
            class="table=responsive"
>
            <table
                        id="startup-table"
                        class="table"
            >
                        <thead>
                                    <tr>
                                                <th>
                                                            Id
                                                </th>
                                                <th>
                                                            Startup Name
                                                </th>
                                                <th>
                                                            Location
                                                </th>
                                    </tr>
                        </thead>
                        <tbody>
                                    <tr>
                                                <td>
                                                            1
                                                </td>
                                                <td />
                                                <td />
                                    </tr>
                                    <tr>
                                                <td>
                                                            2
                                                </td>
                                                <td />
                                                <td />
                                    </tr>
                                    <tr>
                                                <td>
                                                            3
                                                </td>
                                                <td />
                                                <td />
                                    </tr>
                        </tbody>
            </table>
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <table
              className="table"
              id="startup-table"
>
              <thead>
                            <tr>
                                          <th>
                                                        Id
                                          </th>
                                          <th>
                                                        Startup Name
                                          </th>
                                          <th>
                                                        Location
                                          </th>
                            </tr>
              </thead>
              <tbody>
                            <tr>
                                          <td>
                                                        1
                                          </td>
                                          <td />
                                          <td />
                            </tr>
                            <tr>
                                          <td>
                                                        2
                                          </td>
                                          <td />
                                          <td />
                            </tr>
                            <tr>
                                          <td>
                                                        3
                                          </td>
                                          <td />
                                          <td />
                            </tr>
              </tbody>
</table>,
            "className": "table=responsive",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <table
                id="startup-table"
                class="table"
>
                <thead>
                                <tr>
                                                <th>
                                                                Id
                                                </th>
                                                <th>
                                                                Startup Name
                                                </th>
                                                <th>
                                                                Location
                                                </th>
                                </tr>
                </thead>
                <tbody>
                                <tr>
                                                <td>
                                                                1
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                                <tr>
                                                <td>
                                                                2
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                                <tr>
                                                <td>
                                                                3
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                </tbody>
</table>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <thead>
                    <tr>
                                        <th>
                                                            Id
                                        </th>
                                        <th>
                                                            Startup Name
                                        </th>
                                        <th>
                                                            Location
                                        </th>
                    </tr>
</thead>,
                  <tbody>
                    <tr>
                                        <td>
                                                            1
                                        </td>
                                        <td />
                                        <td />
                    </tr>
                    <tr>
                                        <td>
                                                            2
                                        </td>
                                        <td />
                                        <td />
                    </tr>
                    <tr>
                                        <td>
                                                            3
                                        </td>
                                        <td />
                                        <td />
                    </tr>
</tbody>,
                ],
                "className": "table",
                "id": "startup-table",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <thead>
                    <tr>
                                        <th>
                                                            Id
                                        </th>
                                        <th>
                                                            Startup Name
                                        </th>
                                        <th>
                                                            Location
                                        </th>
                    </tr>
</thead>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <tr>
                      <th>
                                            Id
                      </th>
                      <th>
                                            Startup Name
                      </th>
                      <th>
                                            Location
                      </th>
</tr>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <tr>
                        <th>
                                                Id
                        </th>
                        <th>
                                                Startup Name
                        </th>
                        <th>
                                                Location
                        </th>
</tr>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <th>
                            Id
</th>,
                          <th>
                            Startup Name
</th>,
                          <th>
                            Location
</th>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <th>
                            Id
</th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Id",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Id",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th>
                            Startup Name
</th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Startup Name",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Startup Name",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th>
                            Location
</th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Location",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Location",
                          ],
                          "type": "th",
                        },
                      ],
                      "type": "tr",
                    },
                  ],
                  "type": "thead",
                },
                Object {
                  "instance": <tbody>
                    <tr>
                                        <td>
                                                            1
                                        </td>
                                        <td />
                                        <td />
                    </tr>
                    <tr>
                                        <td>
                                                            2
                                        </td>
                                        <td />
                                        <td />
                    </tr>
                    <tr>
                                        <td>
                                                            3
                                        </td>
                                        <td />
                                        <td />
                    </tr>
</tbody>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <tr>
                        <td>
                                                1
                        </td>
                        <td />
                        <td />
</tr>,
                      <tr>
                        <td>
                                                2
                        </td>
                        <td />
                        <td />
</tr>,
                      <tr>
                        <td>
                                                3
                        </td>
                        <td />
                        <td />
</tr>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <tr>
                        <td>
                                                1
                        </td>
                        <td />
                        <td />
</tr>,
                      "key": "1",
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <td>
                            1
</td>,
                          <td />,
                          <td />,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <td>
                            1
</td>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": 1,
                          },
                          "ref": null,
                          "rendered": Array [
                            1,
                          ],
                          "type": "td",
                        },
                        Object {
                          "instance": <td />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "td",
                        },
                        Object {
                          "instance": <td />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "td",
                        },
                      ],
                      "type": "tr",
                    },
                    Object {
                      "instance": <tr>
                        <td>
                                                2
                        </td>
                        <td />
                        <td />
</tr>,
                      "key": "2",
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <td>
                            2
</td>,
                          <td />,
                          <td />,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <td>
                            2
</td>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": 2,
                          },
                          "ref": null,
                          "rendered": Array [
                            2,
                          ],
                          "type": "td",
                        },
                        Object {
                          "instance": <td />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "td",
                        },
                        Object {
                          "instance": <td />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "td",
                        },
                      ],
                      "type": "tr",
                    },
                    Object {
                      "instance": <tr>
                        <td>
                                                3
                        </td>
                        <td />
                        <td />
</tr>,
                      "key": "3",
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <td>
                            3
</td>,
                          <td />,
                          <td />,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <td>
                            3
</td>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": 3,
                          },
                          "ref": null,
                          "rendered": Array [
                            3,
                          ],
                          "type": "td",
                        },
                        Object {
                          "instance": <td />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "td",
                        },
                        Object {
                          "instance": <td />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "td",
                        },
                      ],
                      "type": "tr",
                    },
                  ],
                  "type": "tbody",
                },
              ],
              "type": "table",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": StartupTable {
        "_reactInternalFiber": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "fetchStartups": [Function],
                "startups": Object {
                  "all": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                  "filtered": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "fetchStartups": [Function],
                "startups": Object {
                  "all": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                  "filtered": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                },
              },
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                                        <div
                                                            class="table=responsive"
                                        >
                                                            <table
                                                                                id="startup-table"
                                                                                class="table"
                                                            >
                                                                                <thead>
                                                                                                    <tr>
                                                                                                                        <th>
                                                                                                                                            Id
                                                                                                                        </th>
                                                                                                                        <th>
                                                                                                                                            Startup Name
                                                                                                                        </th>
                                                                                                                        <th>
                                                                                                                                            Location
                                                                                                                        </th>
                                                                                                    </tr>
                                                                                </thead>
                                                                                <tbody>
                                                                                                    <tr>
                                                                                                                        <td>
                                                                                                                                            1
                                                                                                                        </td>
                                                                                                                        <td />
                                                                                                                        <td />
                                                                                                    </tr>
                                                                                                    <tr>
                                                                                                                        <td>
                                                                                                                                            2
                                                                                                                        </td>
                                                                                                                        <td />
                                                                                                                        <td />
                                                                                                    </tr>
                                                                                                    <tr>
                                                                                                                        <td>
                                                                                                                                            3
                                                                                                                        </td>
                                                                                                                        <td />
                                                                                                                        <td />
                                                                                                    </tr>
                                                                                </tbody>
                                                            </table>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "fetchStartups": [Function],
                                                                        "startups": Object {
                                                                          "all": Array [
                                                                            Object {
                                                                              "SNo": 1,
                                                                            },
                                                                            Object {
                                                                              "SNo": 2,
                                                                            },
                                                                            Object {
                                                                              "SNo": 3,
                                                                            },
                                                                          ],
                                                                          "filtered": Array [
                                                                            Object {
                                                                              "SNo": 1,
                                                                            },
                                                                            Object {
                                                                              "SNo": 2,
                                                                            },
                                                                            Object {
                                                                              "SNo": 3,
                                                                            },
                                                                          ],
                                                                        },
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "fetchStartups": [Function],
                                                                        "startups": Object {
                                                                          "all": Array [
                                                                            Object {
                                                                              "SNo": 1,
                                                                            },
                                                                            Object {
                                                                              "SNo": 2,
                                                                            },
                                                                            Object {
                                                                              "SNo": 3,
                                                                            },
                                                                          ],
                                                                          "filtered": Array [
                                                                            Object {
                                                                              "SNo": 1,
                                                                            },
                                                                            Object {
                                                                              "SNo": 2,
                                                                            },
                                                                            Object {
                                                                              "SNo": 3,
                                                                            },
                                                                          ],
                                                                        },
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "fetchStartups": [Function],
                                                      "startups": Object {
                                                        "all": Array [
                                                          Object {
                                                            "SNo": 1,
                                                          },
                                                          Object {
                                                            "SNo": 2,
                                                          },
                                                          Object {
                                                            "SNo": 3,
                                                          },
                                                        ],
                                                        "filtered": Array [
                                                          Object {
                                                            "SNo": 1,
                                                          },
                                                          Object {
                                                            "SNo": 2,
                                                          },
                                                          Object {
                                                            "SNo": 3,
                                                          },
                                                        ],
                                                      },
                                                    }
                  }
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      class="table=responsive"
                                    >
                                                      <table
                                                                        id="startup-table"
                                                                        class="table"
                                                      >
                                                                        <thead>
                                                                                          <tr>
                                                                                                            <th>
                                                                                                                              Id
                                                                                                            </th>
                                                                                                            <th>
                                                                                                                              Startup Name
                                                                                                            </th>
                                                                                                            <th>
                                                                                                                              Location
                                                                                                            </th>
                                                                                          </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              1
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              2
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              3
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                        </tbody>
                                                      </table>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "fetchStartups": [Function],
                  "startups": Object {
                    "all": Array [
                      Object {
                        "SNo": 1,
                      },
                      Object {
                        "SNo": 2,
                      },
                      Object {
                        "SNo": 3,
                      },
                    ],
                    "filtered": Array [
                      Object {
                        "SNo": 1,
                      },
                      Object {
                        "SNo": 2,
                      },
                      Object {
                        "SNo": 3,
                      },
                    ],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "fetchStartups": [Function],
                  "startups": Object {
                    "all": Array [
                      Object {
                        "SNo": 1,
                      },
                      Object {
                        "SNo": 2,
                      },
                      Object {
                        "SNo": 3,
                      },
                    ],
                    "filtered": Array [
                      Object {
                        "SNo": 1,
                      },
                      Object {
                        "SNo": 2,
                      },
                      Object {
                        "SNo": 3,
                      },
                    ],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
              "lineNumber": 14,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                "lineNumber": 15,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                  "lineNumber": 16,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                    "lineNumber": 17,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                      "lineNumber": 18,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                        "lineNumber": 19,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Id",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                          "lineNumber": 20,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Startup Name",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 13,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                            "lineNumber": 21,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 2,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Location",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <th>
                            Location
</th>,
                          "tag": 5,
                          "type": "th",
                          "updateQueue": null,
                        },
                        "stateNode": <th>
                          Startup Name
</th>,
                        "tag": 5,
                        "type": "th",
                        "updateQueue": null,
                      },
                      "stateNode": <th>
                        Id
</th>,
                      "tag": 5,
                      "type": "th",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <th>
                          Id
</th>,
                        <th>
                          Startup Name
</th>,
                        <th>
                          Location
</th>,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <tr>
                      <th>
                                            Id
                      </th>
                      <th>
                                            Startup Name
                      </th>
                      <th>
                                            Location
                      </th>
</tr>,
                    "tag": 5,
                    "type": "tr",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <tr>
                      <th>
                                            Id
                      </th>
                      <th>
                                            Startup Name
                      </th>
                      <th>
                                            Location
                      </th>
</tr>,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                      "lineNumber": 24,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 14,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                        "lineNumber": 28,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                          "lineNumber": 29,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": 1,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 18,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                            "lineNumber": 30,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": undefined,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 19,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                              "lineNumber": 31,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": undefined,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <td />,
                            "tag": 5,
                            "type": "td",
                            "updateQueue": null,
                          },
                          "stateNode": <td />,
                          "tag": 5,
                          "type": "td",
                          "updateQueue": null,
                        },
                        "stateNode": <td>
                          1
</td>,
                        "tag": 5,
                        "type": "td",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": "1",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <td>
                            1
</td>,
                          <td />,
                          <td />,
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 15,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                          "lineNumber": 28,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                            "lineNumber": 29,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": 2,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                              "lineNumber": 30,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": undefined,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                                "lineNumber": 31,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": undefined,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <td />,
                              "tag": 5,
                              "type": "td",
                              "updateQueue": null,
                            },
                            "stateNode": <td />,
                            "tag": 5,
                            "type": "td",
                            "updateQueue": null,
                          },
                          "stateNode": <td>
                            2
</td>,
                          "tag": 5,
                          "type": "td",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": "2",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <td>
                              2
</td>,
                            <td />,
                            <td />,
                          ],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 16,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                            "lineNumber": 28,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 23,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                              "lineNumber": 29,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": 3,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 24,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                                "lineNumber": 30,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": undefined,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 25,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/kamildydo/Projects/react-redux-projects/startup/src/components/StartupTable.js",
                                  "lineNumber": 31,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": undefined,
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <td />,
                                "tag": 5,
                                "type": "td",
                                "updateQueue": null,
                              },
                              "stateNode": <td />,
                              "tag": 5,
                              "type": "td",
                              "updateQueue": null,
                            },
                            "stateNode": <td>
                              3
</td>,
                            "tag": 5,
                            "type": "td",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 2,
                          "internalContextTag": 0,
                          "key": "3",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <td>
                                3
</td>,
                              <td />,
                              <td />,
                            ],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <tr>
                            <td>
                                                        3
                            </td>
                            <td />
                            <td />
</tr>,
                          "tag": 5,
                          "type": "tr",
                          "updateQueue": null,
                        },
                        "stateNode": <tr>
                          <td>
                                                    2
                          </td>
                          <td />
                          <td />
</tr>,
                        "tag": 5,
                        "type": "tr",
                        "updateQueue": null,
                      },
                      "stateNode": <tr>
                        <td>
                                                1
                        </td>
                        <td />
                        <td />
</tr>,
                      "tag": 5,
                      "type": "tr",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <tr>
                          <td>
                                                    1
                          </td>
                          <td />
                          <td />
</tr>,
                        <tr>
                          <td>
                                                    2
                          </td>
                          <td />
                          <td />
</tr>,
                        <tr>
                          <td>
                                                    3
                          </td>
                          <td />
                          <td />
</tr>,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <tbody>
                      <tr>
                                            <td>
                                                                  1
                                            </td>
                                            <td />
                                            <td />
                      </tr>
                      <tr>
                                            <td>
                                                                  2
                                            </td>
                                            <td />
                                            <td />
                      </tr>
                      <tr>
                                            <td>
                                                                  3
                                            </td>
                                            <td />
                                            <td />
                      </tr>
</tbody>,
                    "tag": 5,
                    "type": "tbody",
                    "updateQueue": null,
                  },
                  "stateNode": <thead>
                    <tr>
                                        <th>
                                                            Id
                                        </th>
                                        <th>
                                                            Startup Name
                                        </th>
                                        <th>
                                                            Location
                                        </th>
                    </tr>
</thead>,
                  "tag": 5,
                  "type": "thead",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <thead>
                      <tr>
                                            <th>
                                                                  Id
                                            </th>
                                            <th>
                                                                  Startup Name
                                            </th>
                                            <th>
                                                                  Location
                                            </th>
                      </tr>
</thead>,
                    <tbody>
                      <tr>
                                            <td>
                                                                  1
                                            </td>
                                            <td />
                                            <td />
                      </tr>
                      <tr>
                                            <td>
                                                                  2
                                            </td>
                                            <td />
                                            <td />
                      </tr>
                      <tr>
                                            <td>
                                                                  3
                                            </td>
                                            <td />
                                            <td />
                      </tr>
</tbody>,
                  ],
                  "className": "table",
                  "id": "startup-table",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <table
                  id="startup-table"
                  class="table"
>
                  <thead>
                                    <tr>
                                                      <th>
                                                                        Id
                                                      </th>
                                                      <th>
                                                                        Startup Name
                                                      </th>
                                                      <th>
                                                                        Location
                                                      </th>
                                    </tr>
                  </thead>
                  <tbody>
                                    <tr>
                                                      <td>
                                                                        1
                                                      </td>
                                                      <td />
                                                      <td />
                                    </tr>
                                    <tr>
                                                      <td>
                                                                        2
                                                      </td>
                                                      <td />
                                                      <td />
                                    </tr>
                                    <tr>
                                                      <td>
                                                                        3
                                                      </td>
                                                      <td />
                                                      <td />
                                    </tr>
                  </tbody>
</table>,
                "tag": 5,
                "type": "table",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <table
                  className="table"
                  id="startup-table"
>
                  <thead>
                                    <tr>
                                                      <th>
                                                                        Id
                                                      </th>
                                                      <th>
                                                                        Startup Name
                                                      </th>
                                                      <th>
                                                                        Location
                                                      </th>
                                    </tr>
                  </thead>
                  <tbody>
                                    <tr>
                                                      <td>
                                                                        1
                                                      </td>
                                                      <td />
                                                      <td />
                                    </tr>
                                    <tr>
                                                      <td>
                                                                        2
                                                      </td>
                                                      <td />
                                                      <td />
                                    </tr>
                                    <tr>
                                                      <td>
                                                                        3
                                                      </td>
                                                      <td />
                                                      <td />
                                    </tr>
                  </tbody>
</table>,
                "className": "table=responsive",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="table=responsive"
>
                <table
                                id="startup-table"
                                class="table"
                >
                                <thead>
                                                <tr>
                                                                <th>
                                                                                Id
                                                                </th>
                                                                <th>
                                                                                Startup Name
                                                                </th>
                                                                <th>
                                                                                Location
                                                                </th>
                                                </tr>
                                </thead>
                                <tbody>
                                                <tr>
                                                                <td>
                                                                                1
                                                                </td>
                                                                <td />
                                                                <td />
                                                </tr>
                                                <tr>
                                                                <td>
                                                                                2
                                                                </td>
                                                                <td />
                                                                <td />
                                                </tr>
                                                <tr>
                                                                <td>
                                                                                3
                                                                </td>
                                                                <td />
                                                                <td />
                                                </tr>
                                </tbody>
                </table>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <div
                className="table=responsive"
>
                <table
                                className="table"
                                id="startup-table"
                >
                                <thead>
                                                <tr>
                                                                <th>
                                                                                Id
                                                                </th>
                                                                <th>
                                                                                Startup Name
                                                                </th>
                                                                <th>
                                                                                Location
                                                                </th>
                                                </tr>
                                </thead>
                                <tbody>
                                                <tr>
                                                                <td>
                                                                                1
                                                                </td>
                                                                <td />
                                                                <td />
                                                </tr>
                                                <tr>
                                                                <td>
                                                                                2
                                                                </td>
                                                                <td />
                                                                <td />
                                                </tr>
                                                <tr>
                                                                <td>
                                                                                3
                                                                </td>
                                                                <td />
                                                                <td />
                                                </tr>
                                </tbody>
                </table>
</div>,
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div>
              <div
                            class="table=responsive"
              >
                            <table
                                          id="startup-table"
                                          class="table"
                            >
                                          <thead>
                                                        <tr>
                                                                      <th>
                                                                                    Id
                                                                      </th>
                                                                      <th>
                                                                                    Startup Name
                                                                      </th>
                                                                      <th>
                                                                                    Location
                                                                      </th>
                                                        </tr>
                                          </thead>
                                          <tbody>
                                                        <tr>
                                                                      <td>
                                                                                    1
                                                                      </td>
                                                                      <td />
                                                                      <td />
                                                        </tr>
                                                        <tr>
                                                                      <td>
                                                                                    2
                                                                      </td>
                                                                      <td />
                                                                      <td />
                                                        </tr>
                                                        <tr>
                                                                      <td>
                                                                                    3
                                                                      </td>
                                                                      <td />
                                                                      <td />
                                                        </tr>
                                          </tbody>
                            </table>
              </div>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 5,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "fetchStartups": [Function],
            "startups": Object {
              "all": Array [
                Object {
                  "SNo": 1,
                },
                Object {
                  "SNo": 2,
                },
                Object {
                  "SNo": 3,
                },
              ],
              "filtered": Array [
                Object {
                  "SNo": 1,
                },
                Object {
                  "SNo": 2,
                },
                Object {
                  "SNo": 3,
                },
              ],
            },
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "fetchStartups": [Function],
                "startups": Object {
                  "all": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                  "filtered": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "fetchStartups": [Function],
                "startups": Object {
                  "all": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                  "filtered": Array [
                    Object {
                      "SNo": 1,
                    },
                    Object {
                      "SNo": 2,
                    },
                    Object {
                      "SNo": 3,
                    },
                  ],
                },
              },
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                                        <div
                                                            class="table=responsive"
                                        >
                                                            <table
                                                                                id="startup-table"
                                                                                class="table"
                                                            >
                                                                                <thead>
                                                                                                    <tr>
                                                                                                                        <th>
                                                                                                                                            Id
                                                                                                                        </th>
                                                                                                                        <th>
                                                                                                                                            Startup Name
                                                                                                                        </th>
                                                                                                                        <th>
                                                                                                                                            Location
                                                                                                                        </th>
                                                                                                    </tr>
                                                                                </thead>
                                                                                <tbody>
                                                                                                    <tr>
                                                                                                                        <td>
                                                                                                                                            1
                                                                                                                        </td>
                                                                                                                        <td />
                                                                                                                        <td />
                                                                                                    </tr>
                                                                                                    <tr>
                                                                                                                        <td>
                                                                                                                                            2
                                                                                                                        </td>
                                                                                                                        <td />
                                                                                                                        <td />
                                                                                                    </tr>
                                                                                                    <tr>
                                                                                                                        <td>
                                                                                                                                            3
                                                                                                                        </td>
                                                                                                                        <td />
                                                                                                                        <td />
                                                                                                    </tr>
                                                                                </tbody>
                                                            </table>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "fetchStartups": [Function],
                                                                        "startups": Object {
                                                                          "all": Array [
                                                                            Object {
                                                                              "SNo": 1,
                                                                            },
                                                                            Object {
                                                                              "SNo": 2,
                                                                            },
                                                                            Object {
                                                                              "SNo": 3,
                                                                            },
                                                                          ],
                                                                          "filtered": Array [
                                                                            Object {
                                                                              "SNo": 1,
                                                                            },
                                                                            Object {
                                                                              "SNo": 2,
                                                                            },
                                                                            Object {
                                                                              "SNo": 3,
                                                                            },
                                                                          ],
                                                                        },
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "fetchStartups": [Function],
                                                                        "startups": Object {
                                                                          "all": Array [
                                                                            Object {
                                                                              "SNo": 1,
                                                                            },
                                                                            Object {
                                                                              "SNo": 2,
                                                                            },
                                                                            Object {
                                                                              "SNo": 3,
                                                                            },
                                                                          ],
                                                                          "filtered": Array [
                                                                            Object {
                                                                              "SNo": 1,
                                                                            },
                                                                            Object {
                                                                              "SNo": 2,
                                                                            },
                                                                            Object {
                                                                              "SNo": 3,
                                                                            },
                                                                          ],
                                                                        },
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "fetchStartups": [Function],
                                                      "startups": Object {
                                                        "all": Array [
                                                          Object {
                                                            "SNo": 1,
                                                          },
                                                          Object {
                                                            "SNo": 2,
                                                          },
                                                          Object {
                                                            "SNo": 3,
                                                          },
                                                        ],
                                                        "filtered": Array [
                                                          Object {
                                                            "SNo": 1,
                                                          },
                                                          Object {
                                                            "SNo": 2,
                                                          },
                                                          Object {
                                                            "SNo": 3,
                                                          },
                                                        ],
                                                      },
                                                    }
                  }
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      class="table=responsive"
                                    >
                                                      <table
                                                                        id="startup-table"
                                                                        class="table"
                                                      >
                                                                        <thead>
                                                                                          <tr>
                                                                                                            <th>
                                                                                                                              Id
                                                                                                            </th>
                                                                                                            <th>
                                                                                                                              Startup Name
                                                                                                            </th>
                                                                                                            <th>
                                                                                                                              Location
                                                                                                            </th>
                                                                                          </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              1
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              2
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                                          <tr>
                                                                                                            <td>
                                                                                                                              3
                                                                                                            </td>
                                                                                                            <td />
                                                                                                            <td />
                                                                                          </tr>
                                                                        </tbody>
                                                      </table>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "fetchStartups": [Function],
                  "startups": Object {
                    "all": Array [
                      Object {
                        "SNo": 1,
                      },
                      Object {
                        "SNo": 2,
                      },
                      Object {
                        "SNo": 3,
                      },
                    ],
                    "filtered": Array [
                      Object {
                        "SNo": 1,
                      },
                      Object {
                        "SNo": 2,
                      },
                      Object {
                        "SNo": 3,
                      },
                    ],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "fetchStartups": [Function],
                  "startups": Object {
                    "all": Array [
                      Object {
                        "SNo": 1,
                      },
                      Object {
                        "SNo": 2,
                      },
                      Object {
                        "SNo": 3,
                      },
                    ],
                    "filtered": Array [
                      Object {
                        "SNo": 1,
                      },
                      Object {
                        "SNo": 2,
                      },
                      Object {
                        "SNo": 3,
                      },
                    ],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "componentDidMount": [Function],
        "context": Object {},
        "props": Object {
          "fetchStartups": [Function],
          "startups": Object {
            "all": Array [
              Object {
                "SNo": 1,
              },
              Object {
                "SNo": 2,
              },
              Object {
                "SNo": 3,
              },
            ],
            "filtered": Array [
              Object {
                "SNo": 1,
              },
              Object {
                "SNo": 2,
              },
              Object {
                "SNo": 3,
              },
            ],
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "fetchStartups": [Function],
        "startups": Object {
          "all": Array [
            Object {
              "SNo": 1,
            },
            Object {
              "SNo": 2,
            },
            Object {
              "SNo": 3,
            },
          ],
          "filtered": Array [
            Object {
              "SNo": 1,
            },
            Object {
              "SNo": 2,
            },
            Object {
              "SNo": 3,
            },
          ],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": <div>
          <div
                    class="table=responsive"
          >
                    <table
                              id="startup-table"
                              class="table"
                    >
                              <thead>
                                        <tr>
                                                  <th>
                                                            Id
                                                  </th>
                                                  <th>
                                                            Startup Name
                                                  </th>
                                                  <th>
                                                            Location
                                                  </th>
                                        </tr>
                              </thead>
                              <tbody>
                                        <tr>
                                                  <td>
                                                            1
                                                  </td>
                                                  <td />
                                                  <td />
                                        </tr>
                                        <tr>
                                                  <td>
                                                            2
                                                  </td>
                                                  <td />
                                                  <td />
                                        </tr>
                                        <tr>
                                                  <td>
                                                            3
                                                  </td>
                                                  <td />
                                                  <td />
                                        </tr>
                              </tbody>
                    </table>
          </div>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="table=responsive"
>
            <table
                        className="table"
                        id="startup-table"
            >
                        <thead>
                                    <tr>
                                                <th>
                                                            Id
                                                </th>
                                                <th>
                                                            Startup Name
                                                </th>
                                                <th>
                                                            Location
                                                </th>
                                    </tr>
                        </thead>
                        <tbody>
                                    <tr>
                                                <td>
                                                            1
                                                </td>
                                                <td />
                                                <td />
                                    </tr>
                                    <tr>
                                                <td>
                                                            2
                                                </td>
                                                <td />
                                                <td />
                                    </tr>
                                    <tr>
                                                <td>
                                                            3
                                                </td>
                                                <td />
                                                <td />
                                    </tr>
                        </tbody>
            </table>
</div>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="table=responsive"
>
              <table
                            id="startup-table"
                            class="table"
              >
                            <thead>
                                          <tr>
                                                        <th>
                                                                      Id
                                                        </th>
                                                        <th>
                                                                      Startup Name
                                                        </th>
                                                        <th>
                                                                      Location
                                                        </th>
                                          </tr>
                            </thead>
                            <tbody>
                                          <tr>
                                                        <td>
                                                                      1
                                                        </td>
                                                        <td />
                                                        <td />
                                          </tr>
                                          <tr>
                                                        <td>
                                                                      2
                                                        </td>
                                                        <td />
                                                        <td />
                                          </tr>
                                          <tr>
                                                        <td>
                                                                      3
                                                        </td>
                                                        <td />
                                                        <td />
                                          </tr>
                            </tbody>
              </table>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <table
                className="table"
                id="startup-table"
>
                <thead>
                                <tr>
                                                <th>
                                                                Id
                                                </th>
                                                <th>
                                                                Startup Name
                                                </th>
                                                <th>
                                                                Location
                                                </th>
                                </tr>
                </thead>
                <tbody>
                                <tr>
                                                <td>
                                                                1
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                                <tr>
                                                <td>
                                                                2
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                                <tr>
                                                <td>
                                                                3
                                                </td>
                                                <td />
                                                <td />
                                </tr>
                </tbody>
</table>,
              "className": "table=responsive",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <table
                  id="startup-table"
                  class="table"
>
                  <thead>
                                    <tr>
                                                      <th>
                                                                        Id
                                                      </th>
                                                      <th>
                                                                        Startup Name
                                                      </th>
                                                      <th>
                                                                        Location
                                                      </th>
                                    </tr>
                  </thead>
                  <tbody>
                                    <tr>
                                                      <td>
                                                                        1
                                                      </td>
                                                      <td />
                                                      <td />
                                    </tr>
                                    <tr>
                                                      <td>
                                                                        2
                                                      </td>
                                                      <td />
                                                      <td />
                                    </tr>
                                    <tr>
                                                      <td>
                                                                        3
                                                      </td>
                                                      <td />
                                                      <td />
                                    </tr>
                  </tbody>
</table>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <thead>
                      <tr>
                                            <th>
                                                                  Id
                                            </th>
                                            <th>
                                                                  Startup Name
                                            </th>
                                            <th>
                                                                  Location
                                            </th>
                      </tr>
</thead>,
                    <tbody>
                      <tr>
                                            <td>
                                                                  1
                                            </td>
                                            <td />
                                            <td />
                      </tr>
                      <tr>
                                            <td>
                                                                  2
                                            </td>
                                            <td />
                                            <td />
                      </tr>
                      <tr>
                                            <td>
                                                                  3
                                            </td>
                                            <td />
                                            <td />
                      </tr>
</tbody>,
                  ],
                  "className": "table",
                  "id": "startup-table",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <thead>
                      <tr>
                                            <th>
                                                                  Id
                                            </th>
                                            <th>
                                                                  Startup Name
                                            </th>
                                            <th>
                                                                  Location
                                            </th>
                      </tr>
</thead>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <tr>
                        <th>
                                                Id
                        </th>
                        <th>
                                                Startup Name
                        </th>
                        <th>
                                                Location
                        </th>
</tr>,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <tr>
                          <th>
                                                    Id
                          </th>
                          <th>
                                                    Startup Name
                          </th>
                          <th>
                                                    Location
                          </th>
</tr>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <th>
                              Id
</th>,
                            <th>
                              Startup Name
</th>,
                            <th>
                              Location
</th>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <th>
                              Id
</th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Id",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Id",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th>
                              Startup Name
</th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Startup Name",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Startup Name",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th>
                              Location
</th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Location",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Location",
                            ],
                            "type": "th",
                          },
                        ],
                        "type": "tr",
                      },
                    ],
                    "type": "thead",
                  },
                  Object {
                    "instance": <tbody>
                      <tr>
                                            <td>
                                                                  1
                                            </td>
                                            <td />
                                            <td />
                      </tr>
                      <tr>
                                            <td>
                                                                  2
                                            </td>
                                            <td />
                                            <td />
                      </tr>
                      <tr>
                                            <td>
                                                                  3
                                            </td>
                                            <td />
                                            <td />
                      </tr>
</tbody>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <tr>
                          <td>
                                                    1
                          </td>
                          <td />
                          <td />
</tr>,
                        <tr>
                          <td>
                                                    2
                          </td>
                          <td />
                          <td />
</tr>,
                        <tr>
                          <td>
                                                    3
                          </td>
                          <td />
                          <td />
</tr>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <tr>
                          <td>
                                                    1
                          </td>
                          <td />
                          <td />
</tr>,
                        "key": "1",
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <td>
                              1
</td>,
                            <td />,
                            <td />,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <td>
                              1
</td>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 1,
                            },
                            "ref": null,
                            "rendered": Array [
                              1,
                            ],
                            "type": "td",
                          },
                          Object {
                            "instance": <td />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "td",
                          },
                          Object {
                            "instance": <td />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "td",
                          },
                        ],
                        "type": "tr",
                      },
                      Object {
                        "instance": <tr>
                          <td>
                                                    2
                          </td>
                          <td />
                          <td />
</tr>,
                        "key": "2",
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <td>
                              2
</td>,
                            <td />,
                            <td />,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <td>
                              2
</td>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 2,
                            },
                            "ref": null,
                            "rendered": Array [
                              2,
                            ],
                            "type": "td",
                          },
                          Object {
                            "instance": <td />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "td",
                          },
                          Object {
                            "instance": <td />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "td",
                          },
                        ],
                        "type": "tr",
                      },
                      Object {
                        "instance": <tr>
                          <td>
                                                    3
                          </td>
                          <td />
                          <td />
</tr>,
                        "key": "3",
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <td>
                              3
</td>,
                            <td />,
                            <td />,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <td>
                              3
</td>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": 3,
                            },
                            "ref": null,
                            "rendered": Array [
                              3,
                            ],
                            "type": "td",
                          },
                          Object {
                            "instance": <td />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "td",
                          },
                          Object {
                            "instance": <td />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "td",
                          },
                        ],
                        "type": "tr",
                      },
                    ],
                    "type": "tbody",
                  },
                ],
                "type": "table",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
